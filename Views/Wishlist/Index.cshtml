@model IEnumerable<bushel.Models.Wishlist>

@{
    ViewData["Title"] = "Список желаемого";
}

<style>

.product-card {
    transition: transform 0.3s ease;
}

.product-card:hover {
    transform: translateY(-5px);
}

.product-image-container {
    height: 550px;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 1rem;
}

.product-image {
    max-height: 100%;
    width: auto;
    object-fit: contain;
}
.alert-color {
    border-color: #7A9C57;
    background-color: #E8F0D5;
    color: #7A9C57;
}
h2 {
    padding-top: 2rem;
    color: #334E26; 
}

</style>

<div class="container">
    <h2 class="mb-4">Список желаемого</h2>

    @if (!Model.Any())
    {
        <div class="alert alert-color">
            Ваш список желаемого пуст
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @foreach (var item in Model)
            {
                <div class="col">
                    <div class="card product-card shadow-sm h-100">
                        <div class="product-image-container">
                            @if (!string.IsNullOrEmpty(item.Product.ImageUrl))
                            {
                                <img src="@item.Product.ImageUrl" class="product-image" alt="@item.Product.Name">
                            }
                        </div>
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@item.Product.Name</h5>
                            <p class="card-text flex-grow-1">@item.Product.Description</p>
                            <div class="d-flex justify-content-between align-items-center mt-3">
                                <div class="price-block">
                                    <p class="product-price mb-3">@item.Product.Price.ToString("C")</p>
                                </div>
                                <div class="d-flex gap-2">
                                    <button class="btn btn-icon" onclick="addToCart(@item.ProductId)"
                                            data-cart-button
                                            data-product-id="@item.ProductId">
                                        <i class="bi bi-cart"></i>
                                    </button>
                                    <button class="btn btn-icon" onclick="removeFromWishlist(@item.ProductId)"
                                            data-wishlist-button
                                            data-product-id="@item.ProductId">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@section Scripts {
    <script>
        function removeFromWishlist(productId) {
            Swal.fire({
                title: 'Удаление товара',
                text: 'Вы действительно хотите удалить этот товар из списка желаемого?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Да',
                cancelButtonText: 'Отмена',
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33'
            }).then((result) => {
                if (result.isConfirmed) {
                    const button = document.querySelector(`[data-product-id="${productId}"]`);
                    const icon = button.querySelector('i');

                    fetch('/Wishlist/RemoveFromWishlist', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(productId)
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            toastr.success('Товар успешно удален из списка желаемого');
                            // Находим родительский элемент карточки товара и удаляем его
                            const productCard = button.closest('.col');
                            productCard.remove();
                            
                            // Проверяем, остались ли товары в списке
                            if (document.querySelectorAll('.col').length === 0) {
                                location.reload(); // Перезагружаем страницу, если список пуст
                            }
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        toastr.error('Произошла ошибка при удалении товара');
                    });
                }
            });
        }
    </script>
} 